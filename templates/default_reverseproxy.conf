################################################################################
# This file was generated by Ansible for {{ inventory_hostname }}
# Do NOT modify this file by hand!
################################################################################


{% if (item.letsencrypt.enabled | default(false)) or (item.ssl.enabled | default(false)) %}
### HTTP REDIRECT (ONLY IF SSL/LETSENCRYPT ENABLED)
server {
{% if (item.listen.ipv4 is defined and item.listen.ipv4) or item.listen.ipv4 is not defined %}
    listen
    {{- ' ' + (item.listen.ipv4 | default('')) -}}
    {{- ':' if item.listen.ipv4 is defined else '' -}}
    {{- item.port.http | default(80) }} default_server;
{% endif %}
{% if (item.listen.ipv6 is defined and item.listen.ipv6) or item.listen.ipv6 is not defined %}
    listen
    {{- ' ' + (item.listen.ipv6 | default('[::]')) + ':' -}}
    {{- item.port.http | default(80) }} default_server;
{% endif %}

    server_name _;
    server_tokens off;
    location / {
       return 301 https://{{ item.fqdn_ | regex_replace("_+$", "") }}$request_uri;
    }

{% if item.letsencrypt.enabled | default(false) %}
    location /.well-known/acme-challenge {
        alias /var/www/{{ item.fqdn_ }}/.well-known/acme-challenge;
    }
{% endif %}

    ## LOGGING
{% if item.log.syslog | default(false) %}
    access_log syslog:server=unix:/dev/log,facility=local0,severity=info,nohostname {{ item.log.access_fmt | default('combined') }};
    error_log syslog:server=unix:/dev/log,facility=local0,severity=error,nohostname {{ item.log.error_fmt | default('error') }};
{% else %}
    access_log /var/log/nginx/{{ item.fqdn_ }}_access.log {{ item.log.access_fmt | default('combined') }};
    error_log /var/log/nginx/{{ item.fqdn_ }}_error.log {{ item.log.error_fmt | default('error') }};
{% endif %}
}
{% endif %}

### MAIN SERVER (SSL / HTTP)
server {
{% if (item.listen.ipv4 is defined and item.listen.ipv4) or item.listen.ipv4 is not defined %}
    listen
    {{- ' ' + (item.listen.ipv4 | default('')) -}}
    {{- ':' if item.listen.ipv4 is defined else '' -}}
{%-   if (item.letsencrypt.enabled | default(false)) or (item.ssl.enabled | default(false)) -%}
    {{- item.port.https | default(443) }} ssl default_server;
{%   else %}
    {{- item.port.http | default(80) }} default_server;
{%   endif %}
{% endif %}
{% if (item.listen.ipv6 is defined and item.listen.ipv6) or item.listen.ipv6 is not defined %}
    listen
    {{- ' ' + (item.listen.ipv6 | default('[::]')) + ':' -}}
{%-   if (item.letsencrypt.enabled | default(false)) or (item.ssl.enabled | default(false)) -%}
    {{- item.port.https | default(443) }} ssl default_server;
{%   else %}
    {{- item.port.http | default(80) }} default_server;
{%   endif %}
{% endif %}

    server_name _;
    server_tokens off;

    root /var/www/nginx_static;
    index index.html;

    ## redirect to primary domain
    if ($host != '{{ item.fqdn_ | regex_replace("_+$", "") }}') {
        return 301 https://{{ item.fqdn_ | regex_replace("_+$", "") }}$request_uri;
    }
    location / {
        try_files $uri $uri/ /index.html;
    }

{% if item.hsts is defined %}
    ## HSTS
    add_header Strict-Transport-Security "max-age={{ item.hsts.max_age }}; {% if item.hsts.includeSubDomains %}includeSubDomains; preload{% endif %}" always;
{% endif %}
    ## LOGGING
{% if item.log.syslog | default(false) %}
    access_log syslog:server=unix:/dev/log,facility=local0,severity=info,nohostname {{ item.log.access_fmt | default('combined') }};
    error_log syslog:server=unix:/dev/log,facility=local0,severity=error,nohostname {{ item.log.error_fmt | default('error') }};
{% else %}
    access_log /var/log/nginx/{{ item.fqdn_ }}_access.log {{ item.log.access_fmt | default('combined') }};
    error_log /var/log/nginx/{{ item.fqdn_ }}_error.log {{ item.log.error_fmt | default('error') }};
{% endif %}

{% if (item.letsencrypt.enabled | default(false)) and not (item.ssl.enabled | default(false)) %}
    ## SSL
    ssl_certificate /etc/letsencrypt/live/{{ item.fqdn_ }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ item.fqdn_ }}/privkey.pem;
{% elif (item.ssl.enabled | default(false)) and not (item.letsencrypt.enabled | default(false)) %}
    ssl_certificate {{ item.ssl.pem_path }};
    ssl_certificate_key {{ item.ssl.key_path }};
{% endif %}
{% if (item.letsencrypt.enabled | default(false)) or (item.ssl.enabled | default(false)) %}
    ssl_session_timeout 5m;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
{% endif %}

{% if item.letsencrypt is defined %}
    location /.well-known/acme-challenge {
        alias /var/www/{{ item.fqdn_ }}/.well-known/acme-challenge;
    }
{% endif %}
}
