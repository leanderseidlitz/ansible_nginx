---
- name: Create .well-know for letsencrypt sites
  file:
    dest: '/var/www/{{ item.fqdn_ }}/.well-known'
    mode: 0750
    state: directory
    owner: "{{ nginx_user | default('www-data') }}"
    group: "{{ nginx_user | default('www-data') }}"
  notify: Restart nginx
  tags:
    - nginx_revproxy

- name: Copy site config for bootstrapping
  template:
    src: reverseproxy_bootstrap_letsencrypt.conf
    dest: "/etc/nginx/sites-available/{{ item.fqdn_ }}.conf"
    owner: root
    group: root
    mode: 0640
  register: siteconfig
  tags:
    - nginx_revproxy

- name: ENABLE site config
  file:
    src: "/etc/nginx/sites-available/{{ item.fqdn_ }}.conf"
    dest: "/etc/nginx/sites-enabled/{{ item.fqdn_ }}"
    state: link
  notify: Restart nginx
  register: siteenable
  when:
    - siteconfig is success
  tags:
    - nginx_revproxy

- name: Reload nginx before calling certbot
  service:
    name: nginx
    state: reloaded
  when: siteenable is success
  tags:
    - nginx_revproxy

- name: Running certbot
  command: |
    certbot certonly
    --webroot -w /var/www/{{ item.fqdn_ }}
    -d {{ item.fqdn_ | regex_replace("_+$", "") }}
    {% if item.additional_domains is defined %}
    -d {{ item.additional_domains | join(' -d ') }}
    {% endif %}
    --email {{ item.letsencrypt.email }}
    --non-interactive --cert-name {{ item.fqdn_ }}
    --agree-tos
# creates=/etc/letsencrypt/live/{{ item.fqdn_ }}/fullchain.pem # note: remove this so certbot is always run
  register: certbot
  ignore_errors: true
  when:
    - siteconfig is success
    - siteenable is success
  tags:
    - nginx_revproxy

- name: Delete all artifacts of site as certbot FAILED
  file:
    dest: "{{ file }}"
    state: absent
  with_items:
    - "/etc/nginx/sites-available/{{ item.fqdn_ }}.conf"
    - "/etc/nginx/sites-enabled/{{ item.fqdn_ }}"
    - "/etc/nginx/.le_state/{{ item.fqdn_ }}"
  loop_control:
    loop_var: 'file'
  when: certbot is failed
  tags:
    - nginx_revproxy

- name: Fail after cleanup as certbot has failed
  fail:
  when: certbot is failed
  tags:
    - nginx_revproxy

- name: Copy final revproxy site config
  template:
    src: "{{ 'default_reverseproxy.conf' if (item.serves_static_default | default(false)) else 'reverseproxy.conf' }}"
    dest: "/etc/nginx/sites-available/{{ item.fqdn_ }}.conf"
    owner: root
    group: root
    mode: 0640
  notify: Restart nginx
  register:
    siteconfig
  when:
    - certbot is success
    - item in nginx_revproxy_sites
  tags:
    - nginx_revproxy

- name: Copy final redirect site config
  template:
    src: "redirect.conf"
    dest: "/etc/nginx/sites-available/{{ item.fqdn_ }}.conf"
    owner: root
    group: root
    mode: 0640
  notify: Restart nginx
  register:
    siteconfig
  when:
    - certbot is success
    - item in nginx_redirect_sites
  tags:
    - nginx_revproxy
