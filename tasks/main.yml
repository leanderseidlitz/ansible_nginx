---
- name: Fail when ansible version is not sufficient
  assert:
    that: "ansible_version.full is version_compare('2.9', '>=')"
    msg: >
      This role requires at least ansible version 2.9.x.
      If you are on debian buster, install ansible from buster-backports.

- name: Install nginx
  apt:
    name:
      - nginx
    state: present
  tags:
    - nginx_revproxy

- name: Install python3-passlib
  apt:
    name:
      - python3-passlib
    state: present
  when: have_basic_auth_sites
  tags:
    - nginx_revproxy

- name: Set up nginx directories
  file:
    path: "/etc/nginx/{{ item }}"
    state: directory
    owner: root
    group: root
    mode: 0755
  with_items:
    - sites-available
    - sites-enabled
  tags:
    - nginx_revproxy

- name: Unavailable and host index page specific tasks
  when: have_default_page
  tags:
    - nginx_revproxy
  block:
    - name: Create directory for unavailable and host index page
      file:
        path: /var/www/nginx_static
        state: directory
        owner: "{{ nginx_user }}"
        group: "{{ nginx_user }}"
        mode: 0750
      tags:
        - nginx_revproxy

    - name: Copy unavailable and host index page
      template:
        src: "default_page/index.html"
        dest: "/var/www/nginx_static/index.html"
        owner: "{{ nginx_user }}"
        group: "{{ nginx_user }}"
        mode: 0640
      tags:
        - nginx_revproxy

- name: Copy nginx config
  template:
    src: nginx.conf
    dest: /etc/nginx/nginx.conf
    owner: root
    group: root
    mode: 0640
  notify: Restart nginx
  tags:
    - nginx_revproxy

- name: Add basic_auth
  htpasswd:
    path: "/etc/nginx/{{ item.fqdn_ }}_htpasswd"
    name: "{{ item.basic_auth.user }}"
    password: "{{ item.basic_auth.password }}"
  loop: "{{ nginx_revproxy_sites }}"
  notify: Restart nginx
  when:
    - item.basic_auth is defined
  tags:
    - nginx_revproxy

- name: Add revproxy site config
  template:
    src: "{{ 'default_reverseproxy.conf' if (item.serves_static_default | default(false)) else 'reverseproxy.conf' }}"
    dest: "/etc/nginx/sites-available/{{ item.fqdn_ }}.conf"
    owner: root
    group: root
    mode: 0640
  loop: "{{ nginx_revproxy_sites }}"
  notify: Restart nginx
  register:
    siteconfig
  tags:
    - nginx_revproxy

- name: Add redirect site config
  template:
    src: "redirect.conf"
    dest: "/etc/nginx/sites-available/{{ item.fqdn_ }}.conf"
    owner: root
    group: root
    mode: 0640
  loop: "{{ nginx_redirect_sites }}"
  notify: Restart nginx
  register:
    siteconfig
  tags:
    - nginx_revproxy

- name: Get active sites
  command: ls -1 /etc/nginx/sites-enabled/
  changed_when: false
  register: active
  check_mode: false
  tags:
    - nginx_revproxy

- name: DEACTIVATE sites not deployed by ansible
  file:
    path: "/etc/nginx/sites-enabled/{{ item }}"
    state: absent
  with_items: "{{ active.stdout_lines }}"
  notify: Restart nginx
  when:
    - item not in sites_fqdn_
  tags:
    - nginx_revproxy

- name: ENABLE site config
  file:
    src: "/etc/nginx/sites-available/{{ item.fqdn_ }}.conf"
    dest: "/etc/nginx/sites-enabled/{{ item.fqdn_ }}"
    state: link
  loop: "{{ nginx_sites }}"
  notify: Restart nginx
  when:
    - siteconfig is success
    - not (item.letsencrypt.enabled | default(false))
  tags:
    - nginx_revproxy

- name: Create letsencrypt state dir
  file:
    path: "/etc/nginx/.le_state"
    state: directory
    owner: root
    group: root
    mode: 0755
  when: letsencrypt_sites | count > 0
  tags:
    - nginx_revproxy

- name: Get letsencrypt registered sites (if any)
  command: ls -1 /etc/nginx/.le_state/
  changed_when: false
  register: le_registered
  check_mode: false
  when: letsencrypt_sites | count > 0
  tags:
    - nginx_revproxy

- name: Letsencrypt specific tasks
  when: (letsencrypt_sites | count > 0) or (le_registered.stdout_lines | default([]) | count > 0)
  tags:
    - nginx_revproxy
  block:
    - name: Save letsencrypt cert status
      copy:
        dest: "/etc/nginx/.le_state/{{ item.fqdn_ }}"
        mode: 0400
        owner: root
        group: root
        content: "{{ [item.fqdn_ | regex_replace('_+$', '')] | union(item.additional_domains | default([])) | sort | join(' ') | hash('sha256') }}"
      register: le_active
      loop: "{{ nginx_sites }}"
      when:
        - item.letsencrypt.enabled | default(false)
      tags:
        - nginx_revproxy

    - name: Get unnecessary / updatable letsencrypt cert instances
      set_fact:
        le_update: "{{ le_active | json_query('results[?changed].item.fqdn_') }}"
        le_delete: "{{ le_registered.stdout_lines | difference(letsencrypt_sites) }}"
      tags:
        - nginx_revproxy

    - name: Delete certbot certs we do not need anymore
      command: "certbot delete --non-interactive --cert-name {{ item }}"
      ignore_errors: true
      loop: "{{ le_delete }}"
      changed_when: true
      tags:
        - nginx_revproxy

    - name: Delete state files associated with deleted certbot certs
      file:
        dest: "/etc/nginx/.le_state/{{ item }}"
        state: absent
      ignore_errors: true
      loop: "{{ le_delete }}"
      tags:
        - nginx_revproxy

    - name: Install certbot
      apt:
        package: certbot
        state: present
      when: letsencrypt_sites | count > 0
      tags:
        - nginx_revproxy

    # We include these tasks (and therefore run certbot) if the
    # domains associated with a site have changed. To trigger a manual
    # request of the cert, delete the site from the
    # /etc/nginx/.le_state on the server.
    - name: Include certbot tasks
      include_tasks: letsencrypt_get_cert.yml
      loop: "{{ le_update | default([]) }}"
      loop_control:
        loop_var: 'host'
      vars:
        item: "{{ nginx_sites | selectattr('fqdn_', 'equalto', host) | first }}"
      tags:
        - nginx_revproxy

    - name: Install letsencrypt post-renew hook
      copy:
        src: post-renew-hook-nginx.sh
        dest: /etc/letsencrypt/renewal-hooks/deploy/post-renew-hook-nginx.sh
        owner: root
        group: root
        mode: 0755
